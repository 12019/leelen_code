/********************************************************************************
**
** 文件名:     leelen_security.h
** 版权所有:   (c) 2015 厦门立林科技有限公司
** 文件描述:   实现安防相关通讯协议功能
**
*********************************************************************************
**             修改历史记录
**===============================================================================
**| 日期       | 作者   |  修改记录
**===============================================================================
**| 2015/09/28 | zzh    |  创建该文件
**
*********************************************************************************/

#ifndef LEELEN_SECURITY_H
#define LEELEN_SECURITY_H

#ifdef __cplusplus
extern "C" {
#endif

/*
********************************************************************************
* 定义数据结构
********************************************************************************
*/
typedef struct {
    uint8_t       attrib;            /* 属性 */
    uint8_t       seq;               /* 序号 */
    uint8_t       state;             /* 状态 */
} security_record_t;


typedef struct {
    uint8_t       area_type;         /* 防区类型 */
    uint8_t       area_num;          /* 防区号码 */
    uint8_t       area_name;         /* 防区名称 */
    uint8_t       cam_channel;       /* 摄像头通道号 */
    uint8_t       area_attrib;       /* 防区属性 */
    uint8_t       area_len;          /* 防区地址长度 */
    uint8_t       *area_addr;        /* 防区地址 */
    uint8_t       alarm_time[7];     /* 报警时间 */
    uint8_t       area_user[16];     /* 报警设备号*/
    uint8_t       area_ip[16];       /* 报警设备IP */
} area_record_t;



/*******************************************************************
** 函数名:     start_security_0x0001
** 函数描述:   布撤防记录上传
** 参数:       [in]addr:     目标地址、源地址信息
**             [in]type：    操作类型
**             [in]arrays：  防区组数
**             [in]rec：     布撤防记录
**             [in]informer：回调通知函数
** 返回:       处理成功true，失败false
********************************************************************/
bool_t start_security_0x0001(addr_info_t *addr, uint8_t type, uint8_t arrays, security_record_t *rec, void (*informer)(RESULT_E));

/*******************************************************************
** 函数名:     ack_security_0x0001
** 函数描述:   收到布撤防记录应答
** 参数:       [in]addr:     目标地址、源地址信息      
**             [in]result:   应答结果
** 返回:       处理成功true，失败false
********************************************************************/
bool_t ack_security_0x0001(addr_info_t *addr, uint8_t result);

/*******************************************************************
** 函数名:     stop_security_0x0001
** 函数描述:   布撤防记录上传
** 参数:       无
** 返回:       无
** 注意:
********************************************************************/
bool_t stop_security_0x0001(void);


/*******************************************************************
** 函数名:     start_security_0x0002
** 函数描述:   远程布撤防
** 参数:       [in]addr:     目标地址、源地址信息
**             [in]attrib：  属性
**             [in]state：   状态
**             [in]informer：回调通知函数
** 返回:       处理成功true，失败false
********************************************************************/
bool_t start_security_0x0002(addr_info_t *addr, uint8_t attrib, uint8_t state, void (*informer)(RESULT_E));

/*******************************************************************
** 函数名:     stop_security_0x0002
** 函数描述:   停止远程布撤防
** 参数:       无
** 返回:       无
** 注意:
********************************************************************/
bool_t stop_security_0x0002(void);

/*******************************************************************
** 函数名:     start_security_0x0003
** 函数描述:   防区报警上传
** 参数:       [in]addr:     目标地址、源地址信息
**             [in]area：    防区报警信息
**             [in]pic_num： 图片数量
**             [in]pic：     图片信息
**             [in]informer：回调通知函数
** 返回:       处理成功true，失败false
********************************************************************/
bool_t start_security_0x0003(addr_info_t *addr, area_record_t *area, uint8_t pic_num, name_t *pic, void (*informer)(RESULT_E));

/*******************************************************************
** 函数名:     stop_security_0x0003
** 函数描述:   停止防区报警上传
** 参数:       无
** 返回:       无
** 注意:
********************************************************************/
bool_t stop_security_0x0003(void);

/*******************************************************************
** 函数名:     start_security_0x0004
** 函数描述:   紧急求助
** 参数:       [in]addr:     目标地址、源地址信息
**             [in]informer：回调通知函数
** 返回:       处理成功true，失败false
********************************************************************/
bool_t start_security_0x0004(addr_info_t *addr, void (*informer)(RESULT_E));

/*******************************************************************
** 函数名:     stop_security_0x0004
** 函数描述:   停止紧急求助
** 参数:       无
** 返回:       无
** 注意:
********************************************************************/
bool_t stop_security_0x0004(void);


/*******************************************************************
** 函数名:     init_security
** 函数描述:   模块初始化函数
** 参数:       无
** 返回:       无
********************************************************************/
void init_security(void);


#ifdef __cplusplus
}
#endif

#endif          /* end of LEELEN_SECURITY_H */

